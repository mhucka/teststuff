name: Test

on:
  merge_group:
  pull_request:
  push:
  workflow_dispatch:
    inputs:
      trace:
        description: 'Turn on shell script debugging'
        type: boolean

defaults:
  run:
    shell: bash -x {0}

jobs:
  # test:
  #   runs-on: ubuntu-24.04
  #   timeout-minutes: 5
  #   if: github.repository == 'mhucka/teststuff'
  #   env:
  #     # The next var is used by Bash. We add 'xtrace' to the options if this run
  #     # is a workflow_dispatch invocation and the user set the 'trace' option.
  #     SHELLOPTS: 'xtrace'
  #   steps:
  #     - run: echo yes

  print-mac:
    runs-on: macos-13
    steps:
      - run: sysctl hw.optional
      - run: sysctl machdep
      - run: |
          [[ $(sysctl hw.optional.avx512f) -eq 1 ]] && echo yes || echo no
          [[ $(sysctl hw.optional.avx2_0) -eq 1 ]] && echo yes || echo no
      - run: clang++ --version

  print-win:
    runs-on: windows-2022
    env:
      # Default shell is bash, so this should work.
      SHELLOPTS: 'xtrace'
    steps:
      - run: wmic cpu get
        continue-on-error: true

      - run: systeminfo
        continue-on-error: true

      # - run: msinfo32
      #   continue-on-error: true

      - run: reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Windows" /v FeatureSet
        shell: cmd
        continue-on-error: true

      - run: reg query "Hardware\Description\System\CentralProcessor\0" /v FeatureSet
        shell: cmd
        continue-on-error: true

      - run: reg query "HKLM\Hardware\Description\System\CentralProcessor\0" /v FeatureSet
        shell: cmd
        continue-on-error: true

      - run: |
          mkdir build
          cd build
          cmake ..




  # test:
  #   runs-on: ubuntu-24.04
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       conf: [
  #         {os: ubuntu-24.04, wh: manylinux, arch: x86_64, py: 10, pyarch: x64},
  #         {os: ubuntu-24.04, wh: manylinux, arch: x86_64, py: 11, pyarch: x64},
  #         {os: ubuntu-24.04, wh: manylinux, arch: x86_64, py: 12, pyarch: x64},
  #         {os: ubuntu-24.04, wh: manylinux, arch: x86_64, py: 13, pyarch: x64},

  #         {os: macos-13, wh: macosx, arch: x86_64, py: 10, pyarch: x64},
  #         {os: macos-13, wh: macosx, arch: x86_64, py: 11, pyarch: x64},
  #         {os: macos-13, wh: macosx, arch: x86_64, py: 12, pyarch: x64},
  #         {os: macos-13, wh: macosx, arch: x86_64, py: 13, pyarch: x64},

  #         # 3.10 fails due to https://github.com/actions/setup-python/issues/948
  #         # {os: macos-14, wh: macosx, arch: x86_64, py: 10, pyarch: x64},
  #         {os: macos-14, wh: macosx, arch: x86_64, py: 11, pyarch: x64},
  #         {os: macos-14, wh: macosx, arch: x86_64, py: 12, pyarch: x64},
  #         {os: macos-14, wh: macosx, arch: x86_64, py: 13, pyarch: x64},

  #         {os: macos-15, wh: macosx, arch: arm64, py: 10, pyarch: arm64},
  #         {os: macos-15, wh: macosx, arch: arm64, py: 11, pyarch: arm64},
  #         {os: macos-15, wh: macosx, arch: arm64, py: 12, pyarch: arm64},
  #         {os: macos-15, wh: macosx, arch: arm64, py: 13, pyarch: arm64},

  #         {os: windows-2019, wh: win, arch: AMD64, py: 10, pyarch: x64},
  #         {os: windows-2019, wh: win, arch: AMD64, py: 11, pyarch: x64},
  #         {os: windows-2019, wh: win, arch: AMD64, py: 12, pyarch: x64},
  #         {os: windows-2019, wh: win, arch: AMD64, py: 13, pyarch: x64},
  #       ]
  #   env:
  #     CIBW_ARCHS: ${{matrix.conf.arch}}
  #     CIBW_BUILD: cp3${{matrix.conf.py}}-${{matrix.conf.wh}}_${{matrix.conf.arch}}
  #   steps:
  #     - if: startsWith(matrix.conf.os, 'macos')
  #       run: |
  #         os=${{matrix.conf.os}}
  #         echo MACOSX_DEPLOYMENT_TARGET=${os: -2} >> "$GITHUB_ENV"

  #     - run: echo "$MACOSX_DEPLOYMENT_TARGET"
